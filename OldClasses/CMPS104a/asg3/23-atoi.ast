; TOK_ROOT "<<ROOT>>" (0.0.0)
;    TOK_PROTOTYPE "void" (7.27.1)
;       TOK_VOID "void" (7.27.1)
;          TOK_DECLID "__assert_fail" (7.27.6)
;       TOK_PARAMLIST "(" (7.27.20)
;          TOK_STRING "string" (7.27.21)
;             TOK_DECLID "expr" (7.27.28)
;          TOK_STRING "string" (7.27.34)
;             TOK_DECLID "file" (7.27.41)
;          TOK_INT "int" (7.27.47)
;             TOK_DECLID "line" (7.27.51)
;    TOK_PROTOTYPE "void" (7.28.1)
;       TOK_VOID "void" (7.28.1)
;          TOK_DECLID "putb" (7.28.6)
;       TOK_PARAMLIST "(" (7.28.11)
;          TOK_INT "int" (7.28.12)
;             TOK_DECLID "b" (7.28.16)
;    TOK_PROTOTYPE "void" (7.29.1)
;       TOK_VOID "void" (7.29.1)
;          TOK_DECLID "putc" (7.29.6)
;       TOK_PARAMLIST "(" (7.29.11)
;          TOK_INT "int" (7.29.12)
;             TOK_DECLID "c" (7.29.16)
;    TOK_PROTOTYPE "void" (7.30.1)
;       TOK_VOID "void" (7.30.1)
;          TOK_DECLID "puti" (7.30.6)
;       TOK_PARAMLIST "(" (7.30.11)
;          TOK_INT "int" (7.30.12)
;             TOK_DECLID "i" (7.30.16)
;    TOK_PROTOTYPE "void" (7.31.1)
;       TOK_VOID "void" (7.31.1)
;          TOK_DECLID "puts" (7.31.6)
;       TOK_PARAMLIST "(" (7.31.11)
;          TOK_STRING "string" (7.31.12)
;             TOK_DECLID "s" (7.31.19)
;    TOK_PROTOTYPE "void" (7.32.1)
;       TOK_VOID "void" (7.32.1)
;          TOK_DECLID "endl" (7.32.6)
;       TOK_PARAMLIST "(" (7.32.11)
;    TOK_PROTOTYPE "int" (7.33.1)
;       TOK_INT "int" (7.33.1)
;          TOK_DECLID "getc" (7.33.5)
;       TOK_PARAMLIST "(" (7.33.10)
;    TOK_PROTOTYPE "string" (7.34.1)
;       TOK_STRING "string" (7.34.1)
;          TOK_DECLID "getw" (7.34.8)
;       TOK_PARAMLIST "(" (7.34.13)
;    TOK_PROTOTYPE "string" (7.35.1)
;       TOK_STRING "string" (7.35.1)
;          TOK_DECLID "getln" (7.35.8)
;       TOK_PARAMLIST "(" (7.35.14)
;    TOK_PROTOTYPE "string" (7.36.1)
;       TOK_STRING "string" (7.36.1)
;          TOK_DECLID "[]" (7.36.7)
;       TOK_PARAMLIST "(" (7.36.18)
;    TOK_PROTOTYPE "void" (7.37.1)
;       TOK_VOID "void" (7.37.1)
;          TOK_DECLID "exit" (7.37.6)
;       TOK_PARAMLIST "(" (7.37.11)
;          TOK_INT "int" (7.37.12)
;             TOK_DECLID "status" (7.37.16)
;    TOK_FUNCTION "int" (8.5.1)
;       TOK_INT "int" (8.5.1)
;          TOK_DECLID "atoi" (8.5.5)
;       TOK_PARAMLIST "(" (8.5.10)
;          TOK_STRING "string" (8.5.11)
;             TOK_DECLID "str" (8.5.18)
;       TOK_BLOCK "{" (8.5.23)
;          TOK_BLOCK "{" (8.6.4)
;             TOK_IF "if" (8.6.5)
;                '!' "!" (8.6.9)
;                   TOK_NE "!=" (8.6.15)
;                      TOK_IDENT "str" (8.6.11)
;                      TOK_NULL "null" (8.6.18)
;                TOK_CALL "(" (8.6.39)
;                   TOK_STRINGCON ""str != null"" (8.6.40)
;                   TOK_STRINGCON ""23-atoi.oc"" (8.6.55)
;                   TOK_INTCON "6" (8.6.69)
;                   TOK_IDENT "__assert_fail" (8.6.25)
;          TOK_BLOCK ";" (8.6.73)
;          TOK_VARDECL "=" (8.7.12)
;             TOK_INT "int" (8.7.4)
;                TOK_DECLID "neg" (8.7.8)
;             TOK_INTCON "0" (8.7.14)
;          TOK_VARDECL "=" (8.8.12)
;             TOK_INT "int" (8.8.4)
;                TOK_DECLID "num" (8.8.8)
;             TOK_INTCON "0" (8.8.14)
;          TOK_VARDECL "=" (8.9.14)
;             TOK_INT "int" (8.9.4)
;                TOK_DECLID "digit" (8.9.8)
;             TOK_INTCON "0" (8.9.16)
;          TOK_IF "if" (8.10.4)
;             TOK_NE "!=" (8.10.15)
;                TOK_IDENT "str" (8.10.8)
;                   TOK_INTCON "0" (8.10.12)
;                TOK_CHARCON "'\0'" (8.10.18)
;             TOK_BLOCK "{" (8.10.24)
;                TOK_IF "if" (8.11.7)
;                   TOK_EQ "==" (8.11.18)
;                      TOK_IDENT "str" (8.11.11)
;                         TOK_INTCON "0" (8.11.15)
;                      TOK_CHARCON "'-'" (8.11.21)
;                   TOK_BLOCK "{" (8.11.26)
;                      '=' "=" (8.12.16)
;                         TOK_IDENT "digit" (8.12.10)
;                         '+' "+" (8.12.24)
;                            TOK_IDENT "digit" (8.12.18)
;                            TOK_INTCON "1" (8.12.26)
;                      '=' "=" (8.13.14)
;                         TOK_IDENT "neg" (8.13.10)
;                         TOK_INTCON "1" (8.13.16)
;                TOK_VARDECL "=" (8.15.18)
;                   TOK_INT "int" (8.15.7)
;                      TOK_DECLID "contin" (8.15.11)
;                   TOK_INTCON "1" (8.15.20)
;                TOK_WHILE "while" (8.16.7)
;                   TOK_IDENT "contin" (8.16.14)
;                   TOK_BLOCK "{" (8.16.22)
;                      TOK_IFELSE "if" (8.17.10)
;                         TOK_EQ "==" (8.17.25)
;                            TOK_IDENT "str" (8.17.14)
;                               TOK_IDENT "digit" (8.17.18)
;                            TOK_CHARCON "'\0'" (8.17.28)
;                         TOK_BLOCK "{" (8.17.34)
;                            '=' "=" (8.18.20)
;                               TOK_IDENT "contin" (8.18.13)
;                               TOK_INTCON "0" (8.18.22)
;                         TOK_BLOCK "{" (8.19.16)
;                            TOK_VARDECL "=" (8.20.19)
;                               TOK_INT "int" (8.20.13)
;                                  TOK_DECLID "c" (8.20.17)
;                               TOK_IDENT "str" (8.20.21)
;                                  TOK_IDENT "digit" (8.20.25)
;                            '=' "=" (8.21.19)
;                               TOK_IDENT "digit" (8.21.13)
;                               '+' "+" (8.21.27)
;                                  TOK_IDENT "digit" (8.21.21)
;                                  TOK_INTCON "1" (8.21.29)
;                            TOK_IFELSE "if" (8.22.13)
;                               TOK_LT "<" (8.22.19)
;                                  TOK_IDENT "c" (8.22.17)
;                                  TOK_CHARCON "'0'" (8.22.21)
;                               '=' "=" (8.22.33)
;                                  TOK_IDENT "contin" (8.22.26)
;                                  TOK_INTCON "0" (8.22.35)
;                               TOK_IFELSE "if" (8.23.18)
;                                  TOK_GT ">" (8.23.24)
;                                     TOK_IDENT "c" (8.23.22)
;                                     TOK_CHARCON "'9'" (8.23.26)
;                                  '=' "=" (8.23.38)
;                                     TOK_IDENT "contin" (8.23.31)
;                                     TOK_INTCON "0" (8.23.40)
;                                  '=' "=" (8.24.22)
;                                     TOK_IDENT "num" (8.24.18)
;                                     '-' "-" (8.24.37)
;                                        '+' "+" (8.24.33)
;                                           '*' "*" (8.24.28)
;                                              TOK_IDENT "num" (8.24.24)
;                                              TOK_INTCON "10" (8.24.30)
;                                           TOK_IDENT "c" (8.24.35)
;                                        TOK_CHARCON "'0'" (8.24.39)
;                TOK_IF "if" (8.27.7)
;                   TOK_IDENT "neg" (8.27.11)
;                   '=' "=" (8.27.20)
;                      TOK_IDENT "num" (8.27.16)
;                      TOK_NEG "-" (8.27.22)
;                         TOK_IDENT "num" (8.27.24)
;          TOK_RETURN "return" (8.29.4)
;             TOK_IDENT "num" (8.29.11)
;    TOK_VARDECL "=" (8.32.10)
;       TOK_INT "int" (8.32.1)
;          TOK_DECLID "argi" (8.32.5)
;       TOK_INTCON "1" (8.32.12)
;    TOK_VARDECL "=" (8.33.15)
;       TOK_STRING "string" (8.33.1)
;          TOK_DECLID "[]" (8.33.7)
;       TOK_CALL "(" (8.33.25)
;          TOK_IDENT "getargv" (8.33.17)
;    TOK_WHILE "while" (8.34.1)
;       TOK_NE "!=" (8.34.19)
;          TOK_IDENT "argv" (8.34.8)
;             TOK_IDENT "argi" (8.34.13)
;          TOK_NULL "null" (8.34.22)
;       TOK_BLOCK "{" (8.34.28)
;          TOK_VARDECL "=" (8.35.15)
;             TOK_STRING "string" (8.35.4)
;                TOK_DECLID "arg" (8.35.11)
;             TOK_IDENT "argv" (8.35.17)
;                TOK_IDENT "argi" (8.35.22)
;          TOK_CALL "(" (8.36.9)
;             TOK_IDENT "arg" (8.36.10)
;             TOK_IDENT "puts" (8.36.4)
;          TOK_CALL "(" (8.37.9)
;             TOK_STRINGCON "" = "" (8.37.10)
;             TOK_IDENT "puts" (8.37.4)
;          TOK_CALL "(" (8.38.9)
;             TOK_CALL "(" (8.38.15)
;                TOK_IDENT "arg" (8.38.16)
;                TOK_IDENT "atoi" (8.38.10)
;             TOK_IDENT "puti" (8.38.4)
;          TOK_CALL "(" (8.39.9)
;             TOK_IDENT "endl" (8.39.4)
