; TOK_ROOT "<<ROOT>>" (0.0.0)
;    TOK_STRUCT "struct" (5.4.1)
;       TOK_TYPEID "stack" (5.4.8)
;       TOK_ARRAY "[]" (5.5.10)
;          TOK_STRING "string" (5.5.4)
;          TOK_FIELD "data" (5.5.13)
;       TOK_FIELD "int" (5.6.4)
;          TOK_IDENT "size" (5.6.8)
;       TOK_FIELD "int" (5.7.4)
;          TOK_IDENT "top" (5.7.8)
;    TOK_FUNCTION "stack" (5.10.1)
;       TOK_TYPEID "stack" (5.10.1)
;          TOK_DECLID "new_stack" (5.10.7)
;       TOK_PARAMLIST "(" (5.10.17)
;          TOK_INT "int" (5.10.18)
;             TOK_DECLID "size" (5.10.22)
;       TOK_BLOCK "{" (5.10.28)
;          TOK_VARDECL "=" (5.11.16)
;             TOK_TYPEID "stack" (5.11.4)
;                TOK_DECLID "stack" (5.11.10)
;             TOK_NEW "new" (5.11.18)
;                TOK_TYPEID "stack" (5.11.22)
;          '=' "=" (5.12.15)
;             '.' "." (5.12.9)
;                TOK_IDENT "stack" (5.12.4)
;                TOK_FIELD "data" (5.12.10)
;             TOK_NEWARRAY "new" (5.12.17)
;                TOK_IDENT "size" (5.12.28)
;          '=' "=" (5.13.15)
;             '.' "." (5.13.9)
;                TOK_IDENT "stack" (5.13.4)
;                TOK_FIELD "size" (5.13.10)
;             TOK_IDENT "size" (5.13.17)
;          '=' "=" (5.14.14)
;             '.' "." (5.14.9)
;                TOK_IDENT "stack" (5.14.4)
;                TOK_FIELD "top" (5.14.10)
;             TOK_NEG "-" (5.14.17)
;                TOK_INTCON "1" (5.14.18)
;          TOK_RETURN "return" (5.15.4)
;             TOK_IDENT "stack" (5.15.11)
;    TOK_FUNCTION "void" (5.18.1)
;       TOK_VOID "void" (5.18.1)
;          TOK_DECLID "push" (5.18.6)
;       TOK_PARAMLIST "(" (5.18.11)
;          TOK_TYPEID "stack" (5.18.12)
;             TOK_DECLID "stack" (5.18.18)
;          TOK_STRING "string" (5.18.25)
;             TOK_DECLID "str" (5.18.32)
;       TOK_BLOCK "{" (5.18.37)
;          TOK_CALL "(" (5.19.11)
;             TOK_LT "<" (5.19.22)
;                '.' "." (5.19.17)
;                   TOK_IDENT "stack" (5.19.12)
;                   TOK_FIELD "top" (5.19.18)
;                '-' "-" (5.19.35)
;                   '.' "." (5.19.29)
;                      TOK_IDENT "stack" (5.19.24)
;                      TOK_FIELD "size" (5.19.30)
;                   TOK_INTCON "1" (5.19.37)
;             TOK_IDENT "assert" (5.19.4)
;          '=' "=" (5.20.14)
;             '.' "." (5.20.9)
;                TOK_IDENT "stack" (5.20.4)
;                TOK_FIELD "top" (5.20.10)
;             '+' "+" (5.20.26)
;                '.' "." (5.20.21)
;                   TOK_IDENT "stack" (5.20.16)
;                   TOK_FIELD "top" (5.20.22)
;                TOK_INTCON "1" (5.20.28)
;          '=' "=" (5.21.26)
;             '.' "." (5.21.9)
;                TOK_IDENT "stack" (5.21.4)
;                TOK_FIELD "data" (5.21.10)
;                '.' "." (5.21.20)
;                   TOK_IDENT "stack" (5.21.15)
;                   TOK_FIELD "top" (5.21.21)
;             TOK_IDENT "str" (5.21.28)
;    TOK_FUNCTION "string" (5.24.1)
;       TOK_STRING "string" (5.24.1)
;          TOK_DECLID "pop" (5.24.8)
;       TOK_PARAMLIST "(" (5.24.12)
;          TOK_TYPEID "stack" (5.24.13)
;             TOK_DECLID "stack" (5.24.19)
;       TOK_BLOCK "{" (5.24.26)
;          TOK_CALL "(" (5.25.11)
;             TOK_NE "!=" (5.25.22)
;                '.' "." (5.25.17)
;                   TOK_IDENT "stack" (5.25.12)
;                   TOK_FIELD "top" (5.25.18)
;                TOK_NEG "-" (5.25.26)
;                   TOK_INTCON "1" (5.25.27)
;             TOK_IDENT "assert" (5.25.4)
;          TOK_VARDECL "=" (5.26.15)
;             TOK_STRING "string" (5.26.4)
;                TOK_DECLID "tmp" (5.26.11)
;             '.' "." (5.26.22)
;                TOK_IDENT "stack" (5.26.17)
;                TOK_FIELD "data" (5.26.23)
;                '.' "." (5.26.33)
;                   TOK_IDENT "stack" (5.26.28)
;                   TOK_FIELD "top" (5.26.34)
;          '=' "=" (5.27.14)
;             '.' "." (5.27.9)
;                TOK_IDENT "stack" (5.27.4)
;                TOK_FIELD "top" (5.27.10)
;             '-' "-" (5.27.26)
;                '.' "." (5.27.21)
;                   TOK_IDENT "stack" (5.27.16)
;                   TOK_FIELD "top" (5.27.22)
;                TOK_INTCON "1" (5.27.28)
;          TOK_RETURN "return" (5.28.4)
;             TOK_IDENT "tmp" (5.28.11)
;    TOK_FUNCTION "bool" (5.31.1)
;       TOK_TYPEID "bool" (5.31.1)
;          TOK_DECLID "empty" (5.31.6)
;       TOK_PARAMLIST "(" (5.31.12)
;          TOK_TYPEID "stack" (5.31.13)
;             TOK_DECLID "stack" (5.31.19)
;       TOK_BLOCK "{" (5.31.26)
;          TOK_RETURN "return" (5.32.4)
;             TOK_EQ "==" (5.32.21)
;                '.' "." (5.32.16)
;                   TOK_IDENT "stack" (5.32.11)
;                   TOK_FIELD "top" (5.32.17)
;                TOK_NEG "-" (5.32.25)
;                   TOK_INTCON "1" (5.32.26)
;    TOK_VARDECL "=" (5.36.15)
;       TOK_STRING "string" (5.36.1)
;          TOK_DECLID "[]" (5.36.7)
;       TOK_CALL "(" (5.36.25)
;          TOK_IDENT "getargv" (5.36.17)
;    TOK_VARDECL "=" (5.37.13)
;       TOK_TYPEID "stack" (5.37.1)
;          TOK_DECLID "stack" (5.37.7)
;       TOK_CALL "(" (5.37.25)
;          TOK_INTCON "100" (5.37.26)
;          TOK_IDENT "new_stack" (5.37.15)
;    TOK_VARDECL "=" (5.39.10)
;       TOK_INT "int" (5.39.1)
;          TOK_DECLID "argi" (5.39.5)
;       TOK_INTCON "0" (5.39.12)
;    TOK_WHILE "while" (5.40.1)
;       TOK_NE "!=" (5.40.19)
;          TOK_IDENT "argv" (5.40.8)
;             TOK_IDENT "argi" (5.40.13)
;          TOK_NULL "null" (5.40.22)
;       TOK_BLOCK "{" (5.40.28)
;          TOK_CALL "(" (5.41.9)
;             TOK_IDENT "stack" (5.41.10)
;             TOK_IDENT "argv" (5.41.17)
;                TOK_IDENT "argi" (5.41.22)
;             TOK_IDENT "push" (5.41.4)
;          '=' "=" (5.42.9)
;             TOK_IDENT "argi" (5.42.4)
;             '+' "+" (5.42.16)
;                TOK_IDENT "argi" (5.42.11)
;                TOK_INTCON "1" (5.42.18)
;    TOK_WHILE "while" (5.45.1)
;       '!' "!" (5.45.8)
;          TOK_CALL "(" (5.45.16)
;             TOK_IDENT "stack" (5.45.17)
;             TOK_IDENT "empty" (5.45.10)
;       TOK_BLOCK "{" (5.45.25)
;          TOK_CALL "(" (5.46.9)
;             TOK_CALL "(" (5.46.14)
;                TOK_IDENT "stack" (5.46.15)
;                TOK_IDENT "pop" (5.46.10)
;             TOK_IDENT "puts" (5.46.4)
;          TOK_CALL "(" (5.47.9)
;             TOK_IDENT "endl" (5.47.4)
